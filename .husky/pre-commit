#!/usr/bin/env sh

# Pre-commit hook for profile-weather-view
# Validates staged files before allowing commit

# Color definitions for output formatting
BOLD='\033[1m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Display execution steps
echo "${BLUE}${BOLD}üîç Running pre-commit validation checks...${NC}"

# Check if we're in a CI environment and skip if needed
if [ -n "$CI" ]; then
  echo "${YELLOW}CI environment detected, skipping pre-commit hooks${NC}"
  exit 0
fi

# Get list of staged files for selective linting
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(ts|tsx|js|jsx|json)$' | tr '\n' ' ')

# Check if there are relevant files to validate
if [ -z "$STAGED_FILES" ]; then
  echo "${YELLOW}No relevant files to validate, skipping checks${NC}"
  exit 0
fi

# Store the exit status for each step
FORMAT_STATUS=0
LINT_STATUS=0
TYPE_STATUS=0
TEST_STATUS=0

# Begin validation stages
echo "${BLUE}Starting validation pipeline${NC}"

# Only run checks on staged files when possible
# Otherwise fall back to full project validation

# 1. Run Prettier formatting
echo "${BLUE}üñåÔ∏è  Checking code formatting...${NC}"
if [ -n "$STAGED_FILES" ]; then
  bun run prettier --check "$STAGED_FILES" || FORMAT_STATUS=$?
else
  bun run format || FORMAT_STATUS=$?
fi

# 2. Run ESLint checks
echo "${BLUE}üßπ Running linter checks...${NC}"
if [ -n "$STAGED_FILES" ]; then
  bun run eslint "$STAGED_FILES" || LINT_STATUS=$?
else
  bun run lint || LINT_STATUS=$?
fi

# 3. Run TypeScript type checking
echo "${BLUE}üìò Running TypeScript type checking...${NC}"
bun run type-check || TYPE_STATUS=$?

# 4. Run associated tests (only affected tests if possible)
echo "${BLUE}üß™ Running tests for affected areas...${NC}"
bun run test:staged || TEST_STATUS=$?

# Check if any validation step failed
FAILED=0
if [ $FORMAT_STATUS -ne 0 ]; then
  echo "${RED}‚ùå Code formatting check failed${NC}"
  FAILED=1
fi
chmod +x .husky/pre-commit
if [ $LINT_STATUS -ne 0 ]; then
  echo "${RED}‚ùå Linter check failed${NC}"
  FAILED=1
fi

if [ $TYPE_STATUS -ne 0 ]; then
  echo "${RED}‚ùå Type check failed${NC}"
  FAILED=1
fi

if [ $TEST_STATUS -ne 0 ]; then
  echo "${RED}‚ùå Tests failed${NC}"
  FAILED=1
fi

# Exit with failure if any check failed
if [ $FAILED -ne 0 ]; then
  echo "${RED}${BOLD}‚õî Pre-commit checks failed. Please fix the issues before committing.${NC}"
  echo "${YELLOW}Tip: You can use 'git commit --no-verify' to bypass these checks (not recommended)${NC}"
  exit 1
else
  echo "${GREEN}${BOLD}‚úÖ All pre-commit checks passed!${NC}"
fi

exit 0
